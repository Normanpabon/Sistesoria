/* SE CREA LA BD*/
DROP DATABASE Sistesorias;

CREATE DATABASE sistesorias;

use Sistesorias;

DROP USER 'sistesoriaAdmin';

CREATE USER 'sistesoriaAdmin' IDENTIFIED BY 'wikitiSistesoria';

GRANT ALL PRIVILEGES ON Sistesorias.* to 'sistesoriaAdmin';

/* TABLA USUARIOS */
CREATE TABLE sistesorias.usuario (
  ID INT NOT NULL AUTO_INCREMENT,
  CODIGO_INSTITUCIONAL INT NOT NULL,
  NOMBRE VARCHAR(45) NOT NULL,
  APELLIDO VARCHAR(45) NOT NULL,
  USUARIO VARCHAR(45) NOT NULL,
  CORREO VARCHAR(45) NOT NULL,
  ROL INT(2) NOT NULL COMMENT '0: PROFESOR 1: ESTUDIANTE',
  HASHED_PASSWORD VARCHAR(45) NOT NULL,
  PRIMARY KEY (ID));

/* TABLA ASIGNATURA */
CREATE TABLE sistesorias.asignatura (
  CODIGO_UAO INT NOT NULL,
  NOMBRE VARCHAR(45) NOT NULL,
  CREDITOS INT NOT NULL,
  PRIMARY KEY (CODIGO_UAO))
COMMENT = 'No se considera la facultad de la asignatura pues no se considera pertinente para el aplicativo ';

/*  TABLA CURSO */
CREATE TABLE sistesorias.curso (
  ID_CURSO INT NOT NULL AUTO_INCREMENT,
  CODIGO_ASIGNATURA INT NOT NULL,
  CODIGO_PROFESOR INT NOT NULL,
  FECHA_CIERRE DATE NOT NULL,
  PRIMARY KEY (ID_CURSO), FOREIGN KEY (CODIGO_ASIGNATURA) REFERENCES ASIGNATURA(CODIGO_UAO), FOREIGN KEY (CODIGO_PROFESOR) REFERENCES USUARIO(ID));
  
/* TABLA ASESORIAS */
CREATE TABLE sistesorias.asesoria (
  id_asesoria INT NOT NULL AUTO_INCREMENT,
  codigo_curso INT NOT NULL,
  DIA INT NOT NULL ,
  hora_inicio TIME NOT NULL,
  hora_fin TIME NOT NULL,
  ubicacion VARCHAR(45) NOT NULL,
  cupos INT NOT NULL,
  PRIMARY KEY (id_asesoria), FOREIGN KEY (codigo_curso) REFERENCES CURSO(ID_CURSO));


/* TABLA CITA_ASESORIA */ 
CREATE TABLE sistesorias.cita_asesoria (
  ID_CITA INT NOT NULL AUTO_INCREMENT,
  ID_ASESORIA INT NOT NULL,
  ID_ESTUDIANTE INT NOT NULL,
  FECHA DATE NOT NULL,
  HORA_INICIO TIME NOT NULL,
  HORA_FIN TIME NOT NULL,
  APROBADA TINYINT NOT NULL COMMENT 'S: SI  N: NO',
  ASISTIO TINYINT NOT NULL COMMENT 'S: SI ASITE  N: NO ASISTE',
  PRIMARY KEY (ID_CITA), FOREIGN KEY (id_asesoria) REFERENCES asesoria(id_asesoria), FOREIGN KEY (id_estudiante) REFERENCES USUARIO(ID));


  
/*  TABLA MENSAJE */
CREATE TABLE sistesorias.mensaje (
  ID_MENSAJE INT NOT NULL AUTO_INCREMENT,
  ID_RECEPTOR INT NOT NULL,
  ID_EMISOR INT NOT NULL,
  MENSAJE VARCHAR(120) NOT NULL,
  FECHA_ENVIO DATE NOT NULL,
  PRIMARY KEY (ID_MENSAJE), FOREIGN KEY (ID_RECEPTOR) REFERENCES USUARIO(ID), FOREIGN KEY (ID_EMISOR) REFERENCES USUARIO(ID));

/* TABLA MATRICULA*/
CREATE TABLE sistesorias.matricula (
  id_matricula INT NOT NULL AUTO_INCREMENT,
  id_estudiante INT NOT NULL,
  id_curso INT NOT NULL,
  PRIMARY KEY (id_matricula), FOREIGN KEY (id_estudiante) REFERENCES USUARIO(ID), FOREIGN KEY (id_curso) REFERENCES CURSO(ID_CURSO))
COMMENT = 'Matricula realacioa a usuario estudiante con los cursos en los cuales se encuentre inscrito		';






/* Borrar de aca hacia abajo -- Codigo viejo
  
/* FK CITA_ASESORIA - ASESORIA */
ALTER TABLE sistesorias.cita_asesoria 
ADD CONSTRAINT CITA_AS_ASESORIA
FOREIGN KEY (ID_ASESORIA)
REFERENCES sistesorias.asesoria (id_asesoria);

/* FK CITA_ASESORIA - USUARIO  */
ALTER TABLE sistesorias.cita_asesoria 
ADD INDEX CITA_AS_USUARIO_idx (ID_ESTUDIANTE ASC) VISIBLE;
;
ALTER TABLE sistesorias.cita_asesoria 
ADD CONSTRAINT CITA_AS_USUARIO
  FOREIGN KEY (ID_ESTUDIANTE)
  REFERENCES sistesorias.usuario (ID)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

/* FK CURSO - ASIGNATURA Y USUARIO*/
ALTER TABLE sistesorias.curso 
ADD INDEX CURSO_ASIG_idx (CODIGO_ASIG ASC) VISIBLE,
ADD INDEX CURSO_USU_idx (CODIGO_PROF ASC) VISIBLE;
;
ALTER TABLE sistesorias.curso 
ADD CONSTRAINT CURSO_ASIG
  FOREIGN KEY (CODIGO_ASIG)
  REFERENCES sistesorias.asignatura (CODIGO_UAO)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT CURSO_USU
  FOREIGN KEY (CODIGO_PROF)
  REFERENCES sistesorias.usuario (ID)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

/* FK MATRICULA - CURSO Y USUARIO  */
ALTER TABLE sistesorias.matricula 
ADD INDEX MATRI-CURSO_idx (id_curso ASC) VISIBLE,
ADD INDEX MATRI-USU_idx (id_estudiante ASC) VISIBLE;
;
ALTER TABLE sistesorias.matricula 
ADD CONSTRAINT MATRI_CURSO
  FOREIGN KEY (id_curso)
  REFERENCES sistesorias.curso (ID_CURSO)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT MATRI_USU
  FOREIGN KEY (id_estudiante)
  REFERENCES sistesorias.usuario (ID)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

/* FK MENSAJE Y USUARIO -- TENER EN CUENTA QUE EXISTE UN CICLO Y SE DEBIA DE CREAR TABLA DE UNION ENTRE ESTAS DOS TABLAS */
ALTER TABLE sistesorias.mensaje 
ADD INDEX ID_RECEP-ID_USU_idx (ID_RECEPTOR ASC) VISIBLE,
ADD INDEX ID_EMISOR-USU_idx (ID_EMISOR ASC) VISIBLE;
;
ALTER TABLE sistesorias.mensaje 
ADD CONSTRAINT ID_RECEP_ID_USU
  FOREIGN KEY (ID_RECEPTOR)
  REFERENCES sistesorias.usuario (ID)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT ID_EMISOR_USU
  FOREIGN KEY (ID_EMISOR)
  REFERENCES sistesorias.usuario (ID)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
  
/* FK ASESORIA A CURSO */
 ALTER TABLE sistesorias.asesoria 
ADD INDEX ASE_CURSO_idx (codigo_curso ASC) VISIBLE;
;
ALTER TABLE sistesorias.asesoria 
ADD CONSTRAINT ASE_CURSO
  FOREIGN KEY (codigo_curso)
  REFERENCES sistesorias.curso (ID_CURSO)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
